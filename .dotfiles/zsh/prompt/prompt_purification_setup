# Purification
# by Matthieu Cneude
# https://github.com/Phantas0s/purification

# Based on:

# Purity
# by Kevin Lanni
# https://github.com/therealklanni/purity
# MIT License

# prompt:
# %F => color dict
# %f => reset color
# %~ => current path
# %* => time
# %n => username
# %m => shortname host
# %(?..) => prompt conditional - %(condition.true.false)

# Display git status
# TODO to refactor with switch / using someting else than grep
# Might be faster using ripgrep too
git_prompt_status() {
  local INDEX STATUS

  INDEX=$(command git status --porcelain -b 2>/dev/null)

  STATUS=""

  while IFS= read -r line; do
    case "$line" in
      '?? '*)
        STATUS="$ZSH_THEME_GIT_PROMPT_UNTRACKED$STATUS"
        ;;
      'A  '*|'M  '*|'MM '*)
        STATUS="$ZSH_THEME_GIT_PROMPT_ADDED$STATUS"
        ;;
      ' M '*|'AM '*|'MM '*|' T '*)
        STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$STATUS"
        ;;
      'R  '*)
        STATUS="$ZSH_THEME_GIT_PROMPT_RENAMED$STATUS"
        ;;
      ' D '*|'D  '*|'AD '*)
        STATUS="$ZSH_THEME_GIT_PROMPT_DELETED$STATUS"
        ;;
      'UU '*)
        STATUS="$ZSH_THEME_GIT_PROMPT_UNMERGED$STATUS"
        ;;
      '## '*ahead*)
        STATUS="$ZSH_THEME_GIT_PROMPT_AHEAD$STATUS"
        ;;
      '## '*behind*)
        STATUS="$ZSH_THEME_GIT_PROMPT_BEHIND$STATUS"
        ;;
      '## '*diverged*)
        STATUS="$ZSH_THEME_GIT_PROMPT_DIVERGED$STATUS"
        ;;
    esac
  done <<< "$INDEX"

  if command git rev-parse --verify refs/stash >/dev/null 2>&1; then
    STATUS=" $STATUS "
  fi

  [[ -n "$STATUS" ]] && echo " [ $STATUS]"
}

prompt_git_branch() {
    autoload -Uz vcs_info 
    precmd_vcs_info() { vcs_info }
    precmd_functions+=( precmd_vcs_info )
    setopt prompt_subst
    zstyle ':vcs_info:git:*' formats '%b'
}
prompt_git_info() {
    [ ! -z "$vcs_info_msg_0_" ] && echo "$ZSH_THEME_GIT_PROMPT_PREFIX%F{white}$vcs_info_msg_0_%f"
}

prompt_purity_precmd() {
    # Pass a line before each prompt
    print -P ''
}

prompt_purification_setup() {
    # Display git branch

    autoload -Uz add-zsh-hook
    add-zsh-hook precmd prompt_purity_precmd

    ZSH_THEME_GIT_PROMPT_PREFIX=" %F{red}$(printf '\u03BB')%f:"
    ZSH_THEME_GIT_PROMPT_DIRTY=""
    ZSH_THEME_GIT_PROMPT_CLEAN=""

    ZSH_THEME_GIT_PROMPT_ADDED="%F{green}$(printf '\uF0917')%f "
    ZSH_THEME_GIT_PROMPT_MODIFIED="%F{blue}$(printf '\uF129')%f "
    ZSH_THEME_GIT_PROMPT_DELETED="%F{red}$(printf '\uF0918')%f "
    ZSH_THEME_GIT_PROMPT_RENAMED="%F{magenta}$(printf '\uF091A')%f "
    ZSH_THEME_GIT_PROMPT_UNMERGED="%F{yellow}$(printf '\uE727')%f "
    ZSH_THEME_GIT_PROMPT_UNTRACKED="%F{white}$(printf '\uF059')%f "
    ZSH_THEME_GIT_PROMPT_STASHED="%B%F{red}$(printf '\uF087')%f%b "
    ZSH_THEME_GIT_PROMPT_BEHIND="%B%F{red}$(printf '\uF0AB')%f%b "
    ZSH_THEME_GIT_PROMPT_AHEAD="%B%F{green}$(printf '\uF0AA')%f%b "

    prompt_git_branch
    RPROMPT='$(prompt_git_info) $(git_prompt_status)'
    PROMPT=$'%F{green}%~ %B%F{blue}>%f%b '
}

prompt_purification_setup
